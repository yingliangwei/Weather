import java.text.SimpleDateFormat

apply plugin: 'java'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.3.1"
        classpath 'org.apache.ant:ant:1.9.7'
    }

}

sourceCompatibility = 1.6
targetCompatibility = 1.6



configurations {
    jmh
}

sourceSets {
    jmh
}

project.sourceSets.jmh {
    compileClasspath += project.configurations.jmh + project.sourceSets.main.output
    runtimeClasspath += project.configurations.jmh + project.sourceSets.main.output
}

task jmhJarFixed(type: Jar, dependsOn: jmhClasses) {
    doFirst {
        from (project.configurations.jmh.collect {it.isDirectory() ? it : project.zipTree(it)}) {
            exclude '**/META-INF/services/**'
            exclude '**/META-INF/*.SF'
            exclude '**/META-INF/*.DSA'
            exclude '**/META-INF/*.RSA'
        }
        from project.sourceSets.jmh.output
        from project.sourceSets.main.output
        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    }

    manifest {
        attributes 'Main-Class':'org.openjdk.jmh.Main'
    }

    classifier = 'jmh'
}


dependencies {

    implementation 'org.ahocorasick:ahocorasick:0.3.0'

    jmh fileTree(dir: 'jmh-libs', include: ['*.jar'])
    jmh 'org.apache.commons:commons-lang3:3.0'
    jmh 'com.belerweb:pinyin4j:2.5.0'
    jmh 'org.openjdk.jmh:jmh-core:1.3.3'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.3.3'
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar
            artifact javadocJar

            artifactId 'tinypinyin'
        }
    }
}
